{"remainingRequest":"C:\\Users\\Administrador\\REPO DEL PROFE COMPLETO\\mTICP472022\\Ciclo III\\uploads\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrador\\REPO DEL PROFE COMPLETO\\mTICP472022\\Ciclo III\\uploads\\front\\src\\views\\Servicios.vue?vue&type=template&id=56f549da&","dependencies":[{"path":"C:\\Users\\Administrador\\REPO DEL PROFE COMPLETO\\mTICP472022\\Ciclo III\\uploads\\front\\src\\views\\Servicios.vue","mtime":1634187083712},{"path":"C:\\Users\\Administrador\\REPO DEL PROFE COMPLETO\\mTICP472022\\Ciclo III\\uploads\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1634035324667},{"path":"C:\\Users\\Administrador\\REPO DEL PROFE COMPLETO\\mTICP472022\\Ciclo III\\uploads\\front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1634035338583},{"path":"C:\\Users\\Administrador\\REPO DEL PROFE COMPLETO\\mTICP472022\\Ciclo III\\uploads\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1634035324667},{"path":"C:\\Users\\Administrador\\REPO DEL PROFE COMPLETO\\mTICP472022\\Ciclo III\\uploads\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1634035335308}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}